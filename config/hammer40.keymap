/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/* Layers */

#define BASE 0
#define LOWR 1
#define NAV 2

/ {
    combos {
        compatible = "zmk,combos";

        combo_capsw {
            timeout-ms = <50>;
            key-positions = <16 19>;
            bindings = <&caps_word>;
        };

        combo_bootl {
            timeout-ms = <50>;
            key-positions = <0 1 2>;
            bindings = <&bootloader>;
        };

        combo_reset {
            timeout-ms = <50>;
            key-positions = <10 11 12>;
            bindings = <&sys_reset>;
        };
    };

    behaviors {
        rot_td: rot_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp C_PP>, <&kp C_NEXT>, <&kp C_PREV>;
        };

        ble_encoder: ble_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&bt BT_NXT>, <&bt BT_PRV>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "base";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            bindings = <
&kp LEFT_BRACKET  &kp Q      &kp W      &kp E     &kp R    &kp T                   &kp Y           &kp U          &kp I      &kp O     &kp P              &kp RIGHT_BRACKET
&kp LEFT_GUI      &kp A      &kp S      &kp D     &kp F    &kp G                   &kp H           &kp J          &kp K      &kp L     &kp LA(BACKSPACE)  &kp RIGHT_GUI
&kp LEFT_SHIFT    &kp Z      &kp X      &kp C     &kp V    &kp B          &rot_td  &kp N           &kp M          &kp COMMA  &kp DOT   &kp FSLH           &kp RIGHT_SHIFT
&kp LCTRL         &kp PSCRN  &kp LCTRL  &kp LGUI  &kp ESC  &lt NAV SPACE  &kp TAB  &lt LOWR ENTER  &kp BACKSPACE  &kp RCTRL  &kp BSPC  &kp DEL            &kp RCTRL
            >;
        };

        lower_layer {
            display-name = "lowr";
            sensor-bindings = <&ble_encoder>;
            bindings = <
&trans        &kp N1        &kp N2        &kp N3        &kp N4        &kp N5                &kp N6          &kp N7         &kp N8         &kp N9         &kp N0         &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR            &bt BT_CLR_ALL  &bt BT_DISC 4  &bt BT_DISC 4  &bt BT_DISC 2  &bt BT_DISC 1  &bt BT_DISC 0
&trans        &trans        &trans        &trans        &trans        &out OUT_USB  &trans  &out OUT_BLE    &trans         &trans         &trans         &trans         &trans
&trans        &trans        &trans        &trans        &trans        &trans        &trans  &trans          &trans         &trans         &trans         &trans         &trans
            >;
        };

        nav_layer {
            display-name = "nav";
            bindings = <
&kp GRAVE  &kp EXCLAMATION  &kp N2  &kp N3  &kp N4  &kp N5          &kp N6         &kp N7  &kp N8  &kp N9  &kp N0  &trans
&trans     &kp N1           &kp N2  &kp N3  &kp N4  &kp N5          &kp N6         &kp N7  &kp N8  &kp N9  &kp N0  &trans
&trans     &trans           &trans  &trans  &trans  &trans  &trans  &trans         &trans  &trans  &trans  &trans  &trans
&trans     &trans           &trans  &trans  &trans  &trans  &trans  &kp LA(SPACE)  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
