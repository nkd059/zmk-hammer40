/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/* Layers */

#define BASE 0
#define LOWR 1
#define NAV 2

/ {
    combos {
        compatible = "zmk,combos";

        combo_capsw {
            timeout-ms = <50>;
            key-positions = <16 19>;
            bindings = <&caps_word>;
        };

        combo_bootl {
            timeout-ms = <50>;
            key-positions = <0 1 2>;
            bindings = <&bootloader>;
        };

        combo_reset {
            timeout-ms = <50>;
            key-positions = <10 11 12>;
            bindings = <&sys_reset>;
        };
    };

    behaviors {
        rot_td: rot_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp C_PP>, <&kp C_NEXT>, <&kp C_PREV>;
        };

        ble_encoder: ble_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&bt BT_NXT>, <&bt BT_PRV>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "base";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            bindings = <
&kp GRAVE       &kp Q         &kp W            &kp E     &kp R    &kp T                   &kp Y        &kp U          &kp I      &kp O     &kp P              &kp TILDE
&kp LEFT_GUI    &kp A         &kp S            &kp D     &kp F    &kp G                   &kp H        &kp J          &kp K      &kp L     &kp LA(BACKSPACE)  &kp RIGHT_GUI
&kp LEFT_SHIFT  &kp Z         &kp X            &kp C     &kp V    &kp B        &rot_td    &kp N        &kp M          &kp COMMA  &kp DOT   &kp FSLH           &kp BACKSLASH
&kp LCTRL       &kp LEFT_ALT  &kp PRINTSCREEN  &kp LGUI  &kp ESC  &lt 1 SPACE  &lt 3 TAB  &lt 2 ENTER  &kp BACKSPACE  &kp LEFT   &kp DOWN  &kp UP_ARROW       &kp RIGHT
            >;
        };

        nav_layer {
            display-name = "nav";
            bindings = <
&kp LG(TAB)   &kp EXCLAMATION  &kp N2  &kp N3  &kp N4  &kp N5          &kp EXCL          &kp AT             &kp HASH       &kp DOLLAR            &kp PERCENT            &kp COLON
&kp LC(DOWN)  &trans           &trans  &trans  &trans  &trans          &kp CARET         &kp AMPS           &kp ASTRK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMICOLON
&trans        &trans           &trans  &trans  &trans  &trans  &trans  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp LESS_THAN  &kp GREATER_THAN      &kp QUESTION           &kp PIPE
&trans        &trans           &trans  &trans  &trans  &trans  &trans  &kp LA(SPACE)     &trans             &trans         &trans                &trans                 &trans
            >;
        };

        layer_2 {
            bindings = <
&kp LC(GRAVE)  &kp N1        &kp N2  &kp N3  &trans  &trans              &kp LEFT_BRACKET      &kp UNDER     &kp MINUS           &kp PLUS       &kp EQUAL      &kp RIGHT_BRACKET
&kp LEFT_GUI   &kp NUMBER_4  &kp N5  &kp N6  &trans  &trans              &kp LEFT_BRACE        &kp LEFT      &kp DOWN            &kp UP         &kp RIGHT      &kp RIGHT_BRACE
&trans         &kp N7        &kp N8  &kp N9  &trans  &trans      &trans  &kp LEFT_PARENTHESIS  &kp LG(LEFT)  &kp LA(LEFT_ARROW)  &kp LA(RIGHT)  &kp LG(RIGHT)  &kp RIGHT_PARENTHESIS
&trans         &trans        &kp N0  &trans  &trans  &lt 4 CAPS  &trans  &trans                &kp HOME      &trans              &trans         &kp END        &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans     &trans     &trans     &kp LG(R)      &kp LG(T)          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans     &trans     &trans         &trans             &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)      &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(LS(V))  &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4          &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR      &trans        &trans        &trans        &trans        &trans                &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
